# 导入必要库
import pandas as pd  # 用于Excel数据处理
from docxtpl import DocxTemplate  # 用于Word模板操作
import os  # 用于文件路径操作

# 导入PDF转换库
try:
    from docx2pdf import convert  # 用于将Word转PDF

    PDF_CONVERSION = True
except ImportError:
    # 如果未安装docx2pdf库则禁用PDF转换功能
    PDF_CONVERSION = False

# --------------------------
# 数据准备阶段
# --------------------------

# 1. 读取包含大学和专业信息的Excel文件
excel_file = "universities.xlsx"
df = pd.read_excel(excel_file)  # 使用pandas读取数据到DataFrame

# 2. 动态获取专业字段列名
# 排除"University Names"列，其余列均视为专业字段
majors_columns = [col for col in df.columns if col != "University Names"]

# --------------------------
# 模板处理配置
# --------------------------

# 3. 载入Word模板文件
template_file = "sop_template.docx"
doc_template = DocxTemplate(template_file)  # 创建模板对象

# 4. 创建输出目录
# exist_ok=True表示如果目录已存在不会报错
output_folder = "generated_SOPs"
os.makedirs(output_folder, exist_ok=True)

# --------------------------
# 文件生成核心逻辑
# --------------------------

# 5. 遍历Excel中的每一行数据（每个大学）
for index, row in df.iterrows():
    # 获取大学名称（必须字段）
    university = row["University Names"]

    # 遍历所有专业列
    for major_col in majors_columns:
        # 检查专业名称是否有效（非空值）
        if pd.notna(row[major_col]):
            # 构建模板替换上下文
            context = {
                "university": university,
                "major": row[major_col]
            }

            # --------------------------
            # 文档生成操作
            # --------------------------
            # 注意：每个专业生成独立文件
            # 重新载入模板避免内容残留
            doc = DocxTemplate(template_file)

            # 将变量注入模板
            doc.render(context)

            # 清理专业名称中的非法文件名字符
            # 将/和\替换为下划线，避免保存失败
            clean_major = str(row[major_col]).replace("/", "_").replace("\\", "_")

            # 构建输出文件名（格式：大学_专业.docx）
            sop_filename = os.path.join(output_folder, f"{university}_{clean_major}.docx")

            # 保存Word文档
            doc.save(sop_filename)

            # --------------------------
            # 可选PDF转换
            # --------------------------
            if PDF_CONVERSION:
                try:
                    # 转换同名PDF（自动生成.pdf文件）
                    convert(sop_filename)
                except Exception as e:
                    print(f"PDF转换失败：{sop_filename}，错误信息：{str(e)}")

# --------------------------
# 完成提示
# --------------------------
print("所有SOP已生成！")
